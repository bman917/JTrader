/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jchan.jtrader.ui;

import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import com.jchan.jtrader.JTraderDatabaseSv;
import java.util.ServiceLoader;
import javax.swing.DefaultComboBoxModel;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import com.jchan.jtrader.Logger;
import static com.jchan.jtrader.ui.TradeDataModel.*;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//com.jchan.jtrader.ui//DisplayByStock//EN",
autostore = false)
@TopComponent.Description(preferredID = "DisplayByStockTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "com.jchan.jtrader.ui.DisplayByStockTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DisplayByStockAction",
preferredID = "DisplayByStockTopComponent")
public final class DisplayByStockTopComponent extends TopComponent implements TableModelListener {

    DefaultComboBoxModel model = null;
    TradeDataModel tableModel = null;
    JTraderDatabaseSv sv = ServiceLoader.load(JTraderDatabaseSv.class).iterator().next();
    
    private static Logger log = Logger.getInstance();

    public DisplayByStockTopComponent() {

        model = new DefaultComboBoxModel(sv.getStocks().toArray());

        String[] columns = {nDATE, nMODE, nVOLUME, nPRICE, nNETPRICE};

        tableModel = new TradeDataModel(columns, TradeDataModel.Filter.STOCK);
        tableModel.addTableModelListener(this);

        initComponents();
        setName(NbBundle.getMessage(DisplayByStockTopComponent.class, "CTL_DisplayByStockTopComponent"));
        setToolTipText(NbBundle.getMessage(DisplayByStockTopComponent.class, "HINT_DisplayByStockTopComponent"));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxStocks = new javax.swing.JComboBox();
        jButtonGo = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(23, 23));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DisplayByStockTopComponent.class, "DisplayByStockTopComponent.jLabel1.text")); // NOI18N

        jComboBoxStocks.setModel(model);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonGo, org.openide.util.NbBundle.getMessage(DisplayByStockTopComponent.class, "DisplayByStockTopComponent.jButtonGo.text")); // NOI18N
        jButtonGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonAdd, org.openide.util.NbBundle.getMessage(DisplayByStockTopComponent.class, "DisplayByStockTopComponent.jButtonAdd.text")); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonDelete, org.openide.util.NbBundle.getMessage(DisplayByStockTopComponent.class, "DisplayByStockTopComponent.jButtonDelete.text")); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTable1.setModel(tableModel);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxStocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonGo))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 450, Short.MAX_VALUE)
                                .addComponent(jButtonAdd)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxStocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonDelete))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoActionPerformed
        String stock = String.valueOf(jComboBoxStocks.getSelectedItem());
        tableModel.load(TradeDataModel.Filter.STOCK, stock);
        jTable1.requestFocus();
        updateStats();
}//GEN-LAST:event_jButtonGoActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        ModelUtil.addRow(tableModel, jTable1);
}//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        ModelUtil.deleteRow(tableModel, jTable1);
}//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        ModelUtil.handlTabEvent(evt, tableModel, jTable1);
}//GEN-LAST:event_jTable1KeyReleased

    private void updateStats() {
        String stockCode = String.valueOf(jComboBoxStocks.getSelectedItem());
        StatsService.updateStats(stockCode);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonGo;
    private javax.swing.JComboBox jComboBoxStocks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private String getSelectedStock() {
        return String.valueOf(jComboBoxStocks.getSelectedItem());
    }

    @Override
    public void tableChanged(TableModelEvent e) {
        String stock = getSelectedStock();
        
        if (stock != null && stock.trim().length() > 0) {
            log.debug(this.getClass() + ": TableChange event received. Updating " + stock);
            model = new DefaultComboBoxModel(sv.getStocks().toArray());
            jComboBoxStocks.setModel(model);

            for (int i = 0; i < jComboBoxStocks.getItemCount(); i++) {
                String temp = String.valueOf(jComboBoxStocks.getItemAt(i));
                if (temp != null && temp.equals(stock)) {
                    jComboBoxStocks.setSelectedIndex(i);
                    break;
                }
            }

            updateStats();
        }
    }
}
